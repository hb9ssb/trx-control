# Sample trxd(8) config file.  This is in YAML-format.
# See https://yaml.org for details on YAML.

# This file will be processed the yaml Lua module, so the local tags mentioned
# in https://lua.msys.ch/lua-module-reference.html#_a_note_on_yaml_tags can
# be used.

# Run in the background
no-daemon: false

# Listen on localhost for incoming plain socket connections
bind-address: localhost
listen-port: 14285

# Listen on all interfaces for incoming WebSocket connections
websocket:
  bind-address: 0.0.0.0
  listen-port: 14290
  path: trx-control

  # If define SSL parameters if you want to use wss instead of ws
  ssl:
    certificate: server.crt
    key: server.key
    # if you define an SSL root, client certificates are checked against it
    root: server_ca.pem

  # If you don't want to announce trx-control over mDNS, set announce to false
  announce: true

nmea:
  device: /dev/ic-705-nmea
  speed: 9600

# Log incoming connection using syslog
log-connections: true

# trxd shall run as trxd:trxd
user: trxd
group: trxd

# Store the PID of the running trxd process in trxd.pid
pid-file: trxd.pid

# Decode NMEA sentences from a GPS/Glonass/Baidu etc. receiver
nmea:
  device: /dev/ic-705-nmea
  speed: 9600

# The list of transceivers we can control
transceivers:
  ft-897:
    device: /dev/ttyUSB2
    speed: 38400
    trx: yaesu-ft-897

  # ICOM IC-705 connected using Bleutooth (must be paired first)
  ic-705:
    device: 00:11:22:33:44:55
    channel: 3
    trx: icom-ic-705
    # Optionally set the controller and transceiver address
    configuration:
      controllerAddress: 0xe0
      transceiverAddress: 0xa4

  simulator:
    device: /dev/null
    trx: simulator

  ft-710:
    device: /dev/ttyUSB0
    speed: 38400
    trx: yaesu-ft-710
    default: true

# The list of GPIO devices
gpio:
  usb-pio:
    device: /dev/bmcm-usb-pio
    driver: bmcm-usb-pio

# The list of relays we can control
relays:
  dummy:
    type: HID
    idVendor: 0x1234
    idProduct: 0x5678
    driver: dummy-relay

# extensions is the list of public extensions that are run once for all clients
# that connect.  See private-extensions for extension run per-connection.
extensions:
  ping:
    script: ping

  memory:
    script: memory
    configuration:
      connStr: dbname=trx-control
      datestyle: German

  logbook:
    script: logbook
    configuration:
      connStr: dbname=trx-control
      datestyle: German

  cloudlog:
    script: cloudlog
    configuration:
      url: https://cloudlog.xyz.com/index.php/api
      apiKey: xxxxxxxxxxxx

  dxcluster:
    script: dxcluster
    configuration:
      host: wr3d.dxcluster.net
      port: 7300
      callsign: MYCALLSIGN
      cacheTime: 3600

  sotacluster:
    script: dxcluster
    configuration:
      host: cluster.sota.org.uk
      port: 7300
      callsign: MYCALLSIGN
      source: sotacluster
      cacheTime: 3600

  hamqth:
    script: hamqth
    configuration:
      username: MYCALLSIGN
      password: sicrit

  qrz:
    script: qrz
    configuration:
      username: MYCALLSIGN
      password: sicrit

# private-exensions is the list of extensions that are run on a per-connection
# basis, i.e. once for each connecting client.
private-extensions:
  hello:
    script: hello

